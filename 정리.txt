type: 상태 업데이트할거
액션:상태업데이트시 어떻게 업데이트할지 정보가 있는 객체\
type값이 필수이다.


action creator: 액션 생성 함수,type 설정하여 함수 설정,
설정하지 않을시 액션을 발생시킬때 마다 직접 발생시켜주면 된다


리듀서: state,action-> aciton.type, 불변성을 꼭 지켜줘야된다
※기존 리듀서와 다르게 dfault값을 state로 리턴시켜준다.

스토어: 현재 앱의 상태와 리듀서가 포함되어있다. 내장함수 dispatch를 포함시켜준다.
하나의 애플리케이션에서는 하나의 스토어만을 사용한다.

구독: 스토어의 내장함수중 하나, 액션이 디스패치 될때마다

리덕스의 3가지 규칙
1. 하나의 애플리ㅏ케이션엔 하나의 스토어가 있다.

2.상태는 읽기전용이다,.-> 불변성을 지켜야 한다.
※여기서 불변성이랑 어떤 값을 직접적으로 변경하지 않고 새로운 값을 만들어 내는것
필요한 값을 변형해서 사용하고 싶다면 어떠 값의 사본을 만들어서 사용
react사용시 제일 중요하다!

3.리듀서는 순수한 함수여야된다-> 동일한 인풋은 동일한 아웃풋을 내야된다.

리덕스 모듈? 액션 타입, 액션 생성 함수, 리듀서 3가지를 모두 포함한것
3가지 파일을 한파일을 모아서 사용하기: ducks 패턴

모듈 만들때
1. 액션 타입 설정(다른모듈과 중복 되지 않기 위해 모듈이름을 앞에 붙여준다)
2.액션 생성함수 작성(앞에 export 붙여주기)
3.리듀서에서 관리할 초기상태 선언하기==모듈의 초기상태를 선언
4. 리듀서 작성 state에 기본값을 설정해줘야된다.

프리젠테이셔널 컴포넌트-> 리덕스 스토어에 직접적으로 접근하지 않고
필요한 값 또는 함수를 props 로만 받아와서 사용하는 컴포넌트
※Ui 선언에 집중

useSeletor : redux store 안에 있는 값을 조회하는데 사용한다.

리덕스 미들웨어: 주로 비동기 작업을 처리할때 사용한다.
※ 동기와 비동기의 차이:
동기:작업들이 순차적으로 이루어진다, 다른 작업들을 Blocking한다.
비동기: 순차적으로 이루어지지 않는다, 다른작업들은 non-blocking한다.
    ※콜백함수로 호출되어 마무리 된다.

redux-thunk:

redux -sag:



